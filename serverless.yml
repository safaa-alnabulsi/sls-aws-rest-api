
service: sls-aws-rest-api
# frameworkVersion: "=X.X.X"
provider:
  name: aws
  runtime: python3.7
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'eu-west-1'}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ] }
    - Effect: "Allow"
      Action:
        - "s3:PutObject"
        - "s3:DeleteObject"
        - "s3:DeleteBucket"
      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } , "/*"] ] }

    - Effect: "Allow"
      Action:
        - "dynamodb:PutItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:GetItem"
        - "dynamodb:DeleteItem"
        - "dynamodb:CreateTable"
        - "dynamodb:DeleteTable"
        - "dynamodb:UpdateTable"
        - "dynamodb:Query"
        - "dynamodb:Scan"
      Resource: { "Fn::Join" : ["", ["arn:aws:dynamodb:",{ "Ref" : "AWS::Region" },':', { "Ref" : "AWS::AccountId" }, ':table/', { "Ref" : "TodosDynamoDBTable" } ] ] }

  environment:
    dynamodbTable: ${self:service}-${self:provider.stage}

functions:
  create:
    handler: todos/create.create
    events:
      - http:
          path: todos
          method: post
          cors: true
  update:
    handler: todos/update.update
    events:
      - http:
          path: todos/{id}
          method: put
          cors: true
  get:
    handler: todos/get.get
    events:
      - http:
          path: todos/{id}
          method: get
          cors: true
  list:
    handler: todos/list.list
    events:
      - http:
          path: todos
          method: get
          cors: true
  delete:
    handler: todos/delete.delete
    events:
      - http:
          path: todos/{id}
          method: delete
          cors: true

resources:
  Resources:
    TodosDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.dynamodbTable}
        ProvisionedThroughput:
          ReadCapacityUnits: "1"
          WriteCapacityUnits: "1"
        AttributeDefinitions:
          -
            AttributeName: "id"
            AttributeType: "S"
          -
            AttributeName: "todo"
            AttributeType: "S"
        KeySchema:
          -
            AttributeName: "id"
            KeyType: "HASH"
          -
            AttributeName: "todo"
            KeyType: "RANGE"
package:
  include:
    - todos/create.py
    - todos/update.py
    - todos/delete.py
    - todos/get.py
    - todos/list.py
  exclude:
    - ./**